Session 1 [30]
-------------------------------------------------------------------------------------------

Problem Statement
--------------------------------------

You are designing a system to rank products based on their ratings (on a scale of 0 to 5). 
Two products are considered equal if their ratings are equal. A product with a lower rating 
is considered less than one with a higher rating.

Requirements:

Implement a class Product with the following:

    Attributes: name (str), rating (float)
    Define appropriate comparison methods to allow sorting and comparison based on rating.
    such as __le__, __gt__
    Use @total_ordering to minimize method definitions.

You are to:

        Implement the class with proper ordering using @total_ordering.
        Create a list of products and sort them.
        Demonstrate comparisons (==, <, >=, etc.) between different products.


class Product:
    pass

# === SAMPLE TEST CASE ===
if __name__ == "__main__":
    p1 = Product("Laptop", 4.5)
    p2 = Product("Tablet", 4.7)
    p3 = Product("Phone", 4.5)
    p4 = Product("Monitor", 4.2)

    print("Sorted Products:", sorted([p1, p2, p3, p4]))
    print("p1 == p3:", p1 == p3)
    print("p1 < p2:", p1 < p2)
    print("p2 >= p4:", p2 >= p4)

# Output

Sorted Products: [Monitor(4.2), Laptop(4.5), Phone(4.5), Tablet(4.7)]
p1 == p3: True
p1 < p2: True
p2 >= p4: True